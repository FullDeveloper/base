package com.cache.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class EmpExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table emp
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table emp
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table emp
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emp
     *
     * @mbggenerated
     */
    public EmpExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emp
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emp
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emp
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emp
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emp
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emp
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emp
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emp
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emp
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table emp
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table emp
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andEIdIsNull() {
            addCriterion("e_id is null");
            return (Criteria) this;
        }

        public Criteria andEIdIsNotNull() {
            addCriterion("e_id is not null");
            return (Criteria) this;
        }

        public Criteria andEIdEqualTo(Integer value) {
            addCriterion("e_id =", value, "eId");
            return (Criteria) this;
        }

        public Criteria andEIdNotEqualTo(Integer value) {
            addCriterion("e_id <>", value, "eId");
            return (Criteria) this;
        }

        public Criteria andEIdGreaterThan(Integer value) {
            addCriterion("e_id >", value, "eId");
            return (Criteria) this;
        }

        public Criteria andEIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("e_id >=", value, "eId");
            return (Criteria) this;
        }

        public Criteria andEIdLessThan(Integer value) {
            addCriterion("e_id <", value, "eId");
            return (Criteria) this;
        }

        public Criteria andEIdLessThanOrEqualTo(Integer value) {
            addCriterion("e_id <=", value, "eId");
            return (Criteria) this;
        }

        public Criteria andEIdIn(List<Integer> values) {
            addCriterion("e_id in", values, "eId");
            return (Criteria) this;
        }

        public Criteria andEIdNotIn(List<Integer> values) {
            addCriterion("e_id not in", values, "eId");
            return (Criteria) this;
        }

        public Criteria andEIdBetween(Integer value1, Integer value2) {
            addCriterion("e_id between", value1, value2, "eId");
            return (Criteria) this;
        }

        public Criteria andEIdNotBetween(Integer value1, Integer value2) {
            addCriterion("e_id not between", value1, value2, "eId");
            return (Criteria) this;
        }

        public Criteria andEPortraitIsNull() {
            addCriterion("e_portrait is null");
            return (Criteria) this;
        }

        public Criteria andEPortraitIsNotNull() {
            addCriterion("e_portrait is not null");
            return (Criteria) this;
        }

        public Criteria andEPortraitEqualTo(String value) {
            addCriterion("e_portrait =", value, "ePortrait");
            return (Criteria) this;
        }

        public Criteria andEPortraitNotEqualTo(String value) {
            addCriterion("e_portrait <>", value, "ePortrait");
            return (Criteria) this;
        }

        public Criteria andEPortraitGreaterThan(String value) {
            addCriterion("e_portrait >", value, "ePortrait");
            return (Criteria) this;
        }

        public Criteria andEPortraitGreaterThanOrEqualTo(String value) {
            addCriterion("e_portrait >=", value, "ePortrait");
            return (Criteria) this;
        }

        public Criteria andEPortraitLessThan(String value) {
            addCriterion("e_portrait <", value, "ePortrait");
            return (Criteria) this;
        }

        public Criteria andEPortraitLessThanOrEqualTo(String value) {
            addCriterion("e_portrait <=", value, "ePortrait");
            return (Criteria) this;
        }

        public Criteria andEPortraitLike(String value) {
            addCriterion("e_portrait like", value, "ePortrait");
            return (Criteria) this;
        }

        public Criteria andEPortraitNotLike(String value) {
            addCriterion("e_portrait not like", value, "ePortrait");
            return (Criteria) this;
        }

        public Criteria andEPortraitIn(List<String> values) {
            addCriterion("e_portrait in", values, "ePortrait");
            return (Criteria) this;
        }

        public Criteria andEPortraitNotIn(List<String> values) {
            addCriterion("e_portrait not in", values, "ePortrait");
            return (Criteria) this;
        }

        public Criteria andEPortraitBetween(String value1, String value2) {
            addCriterion("e_portrait between", value1, value2, "ePortrait");
            return (Criteria) this;
        }

        public Criteria andEPortraitNotBetween(String value1, String value2) {
            addCriterion("e_portrait not between", value1, value2, "ePortrait");
            return (Criteria) this;
        }

        public Criteria andENameIsNull() {
            addCriterion("e_name is null");
            return (Criteria) this;
        }

        public Criteria andENameIsNotNull() {
            addCriterion("e_name is not null");
            return (Criteria) this;
        }

        public Criteria andENameEqualTo(String value) {
            addCriterion("e_name =", value, "eName");
            return (Criteria) this;
        }

        public Criteria andENameNotEqualTo(String value) {
            addCriterion("e_name <>", value, "eName");
            return (Criteria) this;
        }

        public Criteria andENameGreaterThan(String value) {
            addCriterion("e_name >", value, "eName");
            return (Criteria) this;
        }

        public Criteria andENameGreaterThanOrEqualTo(String value) {
            addCriterion("e_name >=", value, "eName");
            return (Criteria) this;
        }

        public Criteria andENameLessThan(String value) {
            addCriterion("e_name <", value, "eName");
            return (Criteria) this;
        }

        public Criteria andENameLessThanOrEqualTo(String value) {
            addCriterion("e_name <=", value, "eName");
            return (Criteria) this;
        }

        public Criteria andENameLike(String value) {
            addCriterion("e_name like", value, "eName");
            return (Criteria) this;
        }

        public Criteria andENameNotLike(String value) {
            addCriterion("e_name not like", value, "eName");
            return (Criteria) this;
        }

        public Criteria andENameIn(List<String> values) {
            addCriterion("e_name in", values, "eName");
            return (Criteria) this;
        }

        public Criteria andENameNotIn(List<String> values) {
            addCriterion("e_name not in", values, "eName");
            return (Criteria) this;
        }

        public Criteria andENameBetween(String value1, String value2) {
            addCriterion("e_name between", value1, value2, "eName");
            return (Criteria) this;
        }

        public Criteria andENameNotBetween(String value1, String value2) {
            addCriterion("e_name not between", value1, value2, "eName");
            return (Criteria) this;
        }

        public Criteria andEPwdIsNull() {
            addCriterion("e_pwd is null");
            return (Criteria) this;
        }

        public Criteria andEPwdIsNotNull() {
            addCriterion("e_pwd is not null");
            return (Criteria) this;
        }

        public Criteria andEPwdEqualTo(String value) {
            addCriterion("e_pwd =", value, "ePwd");
            return (Criteria) this;
        }

        public Criteria andEPwdNotEqualTo(String value) {
            addCriterion("e_pwd <>", value, "ePwd");
            return (Criteria) this;
        }

        public Criteria andEPwdGreaterThan(String value) {
            addCriterion("e_pwd >", value, "ePwd");
            return (Criteria) this;
        }

        public Criteria andEPwdGreaterThanOrEqualTo(String value) {
            addCriterion("e_pwd >=", value, "ePwd");
            return (Criteria) this;
        }

        public Criteria andEPwdLessThan(String value) {
            addCriterion("e_pwd <", value, "ePwd");
            return (Criteria) this;
        }

        public Criteria andEPwdLessThanOrEqualTo(String value) {
            addCriterion("e_pwd <=", value, "ePwd");
            return (Criteria) this;
        }

        public Criteria andEPwdLike(String value) {
            addCriterion("e_pwd like", value, "ePwd");
            return (Criteria) this;
        }

        public Criteria andEPwdNotLike(String value) {
            addCriterion("e_pwd not like", value, "ePwd");
            return (Criteria) this;
        }

        public Criteria andEPwdIn(List<String> values) {
            addCriterion("e_pwd in", values, "ePwd");
            return (Criteria) this;
        }

        public Criteria andEPwdNotIn(List<String> values) {
            addCriterion("e_pwd not in", values, "ePwd");
            return (Criteria) this;
        }

        public Criteria andEPwdBetween(String value1, String value2) {
            addCriterion("e_pwd between", value1, value2, "ePwd");
            return (Criteria) this;
        }

        public Criteria andEPwdNotBetween(String value1, String value2) {
            addCriterion("e_pwd not between", value1, value2, "ePwd");
            return (Criteria) this;
        }

        public Criteria andEUnameIsNull() {
            addCriterion("e_uname is null");
            return (Criteria) this;
        }

        public Criteria andEUnameIsNotNull() {
            addCriterion("e_uname is not null");
            return (Criteria) this;
        }

        public Criteria andEUnameEqualTo(String value) {
            addCriterion("e_uname =", value, "eUname");
            return (Criteria) this;
        }

        public Criteria andEUnameNotEqualTo(String value) {
            addCriterion("e_uname <>", value, "eUname");
            return (Criteria) this;
        }

        public Criteria andEUnameGreaterThan(String value) {
            addCriterion("e_uname >", value, "eUname");
            return (Criteria) this;
        }

        public Criteria andEUnameGreaterThanOrEqualTo(String value) {
            addCriterion("e_uname >=", value, "eUname");
            return (Criteria) this;
        }

        public Criteria andEUnameLessThan(String value) {
            addCriterion("e_uname <", value, "eUname");
            return (Criteria) this;
        }

        public Criteria andEUnameLessThanOrEqualTo(String value) {
            addCriterion("e_uname <=", value, "eUname");
            return (Criteria) this;
        }

        public Criteria andEUnameLike(String value) {
            addCriterion("e_uname like", value, "eUname");
            return (Criteria) this;
        }

        public Criteria andEUnameNotLike(String value) {
            addCriterion("e_uname not like", value, "eUname");
            return (Criteria) this;
        }

        public Criteria andEUnameIn(List<String> values) {
            addCriterion("e_uname in", values, "eUname");
            return (Criteria) this;
        }

        public Criteria andEUnameNotIn(List<String> values) {
            addCriterion("e_uname not in", values, "eUname");
            return (Criteria) this;
        }

        public Criteria andEUnameBetween(String value1, String value2) {
            addCriterion("e_uname between", value1, value2, "eUname");
            return (Criteria) this;
        }

        public Criteria andEUnameNotBetween(String value1, String value2) {
            addCriterion("e_uname not between", value1, value2, "eUname");
            return (Criteria) this;
        }

        public Criteria andEBirthdayIsNull() {
            addCriterion("e_birthday is null");
            return (Criteria) this;
        }

        public Criteria andEBirthdayIsNotNull() {
            addCriterion("e_birthday is not null");
            return (Criteria) this;
        }

        public Criteria andEBirthdayEqualTo(Date value) {
            addCriterionForJDBCDate("e_birthday =", value, "eBirthday");
            return (Criteria) this;
        }

        public Criteria andEBirthdayNotEqualTo(Date value) {
            addCriterionForJDBCDate("e_birthday <>", value, "eBirthday");
            return (Criteria) this;
        }

        public Criteria andEBirthdayGreaterThan(Date value) {
            addCriterionForJDBCDate("e_birthday >", value, "eBirthday");
            return (Criteria) this;
        }

        public Criteria andEBirthdayGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("e_birthday >=", value, "eBirthday");
            return (Criteria) this;
        }

        public Criteria andEBirthdayLessThan(Date value) {
            addCriterionForJDBCDate("e_birthday <", value, "eBirthday");
            return (Criteria) this;
        }

        public Criteria andEBirthdayLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("e_birthday <=", value, "eBirthday");
            return (Criteria) this;
        }

        public Criteria andEBirthdayIn(List<Date> values) {
            addCriterionForJDBCDate("e_birthday in", values, "eBirthday");
            return (Criteria) this;
        }

        public Criteria andEBirthdayNotIn(List<Date> values) {
            addCriterionForJDBCDate("e_birthday not in", values, "eBirthday");
            return (Criteria) this;
        }

        public Criteria andEBirthdayBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("e_birthday between", value1, value2, "eBirthday");
            return (Criteria) this;
        }

        public Criteria andEBirthdayNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("e_birthday not between", value1, value2, "eBirthday");
            return (Criteria) this;
        }

        public Criteria andELevelIsNull() {
            addCriterion("e_level is null");
            return (Criteria) this;
        }

        public Criteria andELevelIsNotNull() {
            addCriterion("e_level is not null");
            return (Criteria) this;
        }

        public Criteria andELevelEqualTo(Integer value) {
            addCriterion("e_level =", value, "eLevel");
            return (Criteria) this;
        }

        public Criteria andELevelNotEqualTo(Integer value) {
            addCriterion("e_level <>", value, "eLevel");
            return (Criteria) this;
        }

        public Criteria andELevelGreaterThan(Integer value) {
            addCriterion("e_level >", value, "eLevel");
            return (Criteria) this;
        }

        public Criteria andELevelGreaterThanOrEqualTo(Integer value) {
            addCriterion("e_level >=", value, "eLevel");
            return (Criteria) this;
        }

        public Criteria andELevelLessThan(Integer value) {
            addCriterion("e_level <", value, "eLevel");
            return (Criteria) this;
        }

        public Criteria andELevelLessThanOrEqualTo(Integer value) {
            addCriterion("e_level <=", value, "eLevel");
            return (Criteria) this;
        }

        public Criteria andELevelIn(List<Integer> values) {
            addCriterion("e_level in", values, "eLevel");
            return (Criteria) this;
        }

        public Criteria andELevelNotIn(List<Integer> values) {
            addCriterion("e_level not in", values, "eLevel");
            return (Criteria) this;
        }

        public Criteria andELevelBetween(Integer value1, Integer value2) {
            addCriterion("e_level between", value1, value2, "eLevel");
            return (Criteria) this;
        }

        public Criteria andELevelNotBetween(Integer value1, Integer value2) {
            addCriterion("e_level not between", value1, value2, "eLevel");
            return (Criteria) this;
        }

        public Criteria andESixIsNull() {
            addCriterion("e_six is null");
            return (Criteria) this;
        }

        public Criteria andESixIsNotNull() {
            addCriterion("e_six is not null");
            return (Criteria) this;
        }

        public Criteria andESixEqualTo(Integer value) {
            addCriterion("e_six =", value, "eSix");
            return (Criteria) this;
        }

        public Criteria andESixNotEqualTo(Integer value) {
            addCriterion("e_six <>", value, "eSix");
            return (Criteria) this;
        }

        public Criteria andESixGreaterThan(Integer value) {
            addCriterion("e_six >", value, "eSix");
            return (Criteria) this;
        }

        public Criteria andESixGreaterThanOrEqualTo(Integer value) {
            addCriterion("e_six >=", value, "eSix");
            return (Criteria) this;
        }

        public Criteria andESixLessThan(Integer value) {
            addCriterion("e_six <", value, "eSix");
            return (Criteria) this;
        }

        public Criteria andESixLessThanOrEqualTo(Integer value) {
            addCriterion("e_six <=", value, "eSix");
            return (Criteria) this;
        }

        public Criteria andESixIn(List<Integer> values) {
            addCriterion("e_six in", values, "eSix");
            return (Criteria) this;
        }

        public Criteria andESixNotIn(List<Integer> values) {
            addCriterion("e_six not in", values, "eSix");
            return (Criteria) this;
        }

        public Criteria andESixBetween(Integer value1, Integer value2) {
            addCriterion("e_six between", value1, value2, "eSix");
            return (Criteria) this;
        }

        public Criteria andESixNotBetween(Integer value1, Integer value2) {
            addCriterion("e_six not between", value1, value2, "eSix");
            return (Criteria) this;
        }

        public Criteria andEWagesIsNull() {
            addCriterion("e_wages is null");
            return (Criteria) this;
        }

        public Criteria andEWagesIsNotNull() {
            addCriterion("e_wages is not null");
            return (Criteria) this;
        }

        public Criteria andEWagesEqualTo(Integer value) {
            addCriterion("e_wages =", value, "eWages");
            return (Criteria) this;
        }

        public Criteria andEWagesNotEqualTo(Integer value) {
            addCriterion("e_wages <>", value, "eWages");
            return (Criteria) this;
        }

        public Criteria andEWagesGreaterThan(Integer value) {
            addCriterion("e_wages >", value, "eWages");
            return (Criteria) this;
        }

        public Criteria andEWagesGreaterThanOrEqualTo(Integer value) {
            addCriterion("e_wages >=", value, "eWages");
            return (Criteria) this;
        }

        public Criteria andEWagesLessThan(Integer value) {
            addCriterion("e_wages <", value, "eWages");
            return (Criteria) this;
        }

        public Criteria andEWagesLessThanOrEqualTo(Integer value) {
            addCriterion("e_wages <=", value, "eWages");
            return (Criteria) this;
        }

        public Criteria andEWagesIn(List<Integer> values) {
            addCriterion("e_wages in", values, "eWages");
            return (Criteria) this;
        }

        public Criteria andEWagesNotIn(List<Integer> values) {
            addCriterion("e_wages not in", values, "eWages");
            return (Criteria) this;
        }

        public Criteria andEWagesBetween(Integer value1, Integer value2) {
            addCriterion("e_wages between", value1, value2, "eWages");
            return (Criteria) this;
        }

        public Criteria andEWagesNotBetween(Integer value1, Integer value2) {
            addCriterion("e_wages not between", value1, value2, "eWages");
            return (Criteria) this;
        }

        public Criteria andEHobbyIsNull() {
            addCriterion("e_hobby is null");
            return (Criteria) this;
        }

        public Criteria andEHobbyIsNotNull() {
            addCriterion("e_hobby is not null");
            return (Criteria) this;
        }

        public Criteria andEHobbyEqualTo(String value) {
            addCriterion("e_hobby =", value, "eHobby");
            return (Criteria) this;
        }

        public Criteria andEHobbyNotEqualTo(String value) {
            addCriterion("e_hobby <>", value, "eHobby");
            return (Criteria) this;
        }

        public Criteria andEHobbyGreaterThan(String value) {
            addCriterion("e_hobby >", value, "eHobby");
            return (Criteria) this;
        }

        public Criteria andEHobbyGreaterThanOrEqualTo(String value) {
            addCriterion("e_hobby >=", value, "eHobby");
            return (Criteria) this;
        }

        public Criteria andEHobbyLessThan(String value) {
            addCriterion("e_hobby <", value, "eHobby");
            return (Criteria) this;
        }

        public Criteria andEHobbyLessThanOrEqualTo(String value) {
            addCriterion("e_hobby <=", value, "eHobby");
            return (Criteria) this;
        }

        public Criteria andEHobbyLike(String value) {
            addCriterion("e_hobby like", value, "eHobby");
            return (Criteria) this;
        }

        public Criteria andEHobbyNotLike(String value) {
            addCriterion("e_hobby not like", value, "eHobby");
            return (Criteria) this;
        }

        public Criteria andEHobbyIn(List<String> values) {
            addCriterion("e_hobby in", values, "eHobby");
            return (Criteria) this;
        }

        public Criteria andEHobbyNotIn(List<String> values) {
            addCriterion("e_hobby not in", values, "eHobby");
            return (Criteria) this;
        }

        public Criteria andEHobbyBetween(String value1, String value2) {
            addCriterion("e_hobby between", value1, value2, "eHobby");
            return (Criteria) this;
        }

        public Criteria andEHobbyNotBetween(String value1, String value2) {
            addCriterion("e_hobby not between", value1, value2, "eHobby");
            return (Criteria) this;
        }

        public Criteria andEDeptidIsNull() {
            addCriterion("e_deptId is null");
            return (Criteria) this;
        }

        public Criteria andEDeptidIsNotNull() {
            addCriterion("e_deptId is not null");
            return (Criteria) this;
        }

        public Criteria andEDeptidEqualTo(Integer value) {
            addCriterion("e_deptId =", value, "eDeptid");
            return (Criteria) this;
        }

        public Criteria andEDeptidNotEqualTo(Integer value) {
            addCriterion("e_deptId <>", value, "eDeptid");
            return (Criteria) this;
        }

        public Criteria andEDeptidGreaterThan(Integer value) {
            addCriterion("e_deptId >", value, "eDeptid");
            return (Criteria) this;
        }

        public Criteria andEDeptidGreaterThanOrEqualTo(Integer value) {
            addCriterion("e_deptId >=", value, "eDeptid");
            return (Criteria) this;
        }

        public Criteria andEDeptidLessThan(Integer value) {
            addCriterion("e_deptId <", value, "eDeptid");
            return (Criteria) this;
        }

        public Criteria andEDeptidLessThanOrEqualTo(Integer value) {
            addCriterion("e_deptId <=", value, "eDeptid");
            return (Criteria) this;
        }

        public Criteria andEDeptidIn(List<Integer> values) {
            addCriterion("e_deptId in", values, "eDeptid");
            return (Criteria) this;
        }

        public Criteria andEDeptidNotIn(List<Integer> values) {
            addCriterion("e_deptId not in", values, "eDeptid");
            return (Criteria) this;
        }

        public Criteria andEDeptidBetween(Integer value1, Integer value2) {
            addCriterion("e_deptId between", value1, value2, "eDeptid");
            return (Criteria) this;
        }

        public Criteria andEDeptidNotBetween(Integer value1, Integer value2) {
            addCriterion("e_deptId not between", value1, value2, "eDeptid");
            return (Criteria) this;
        }

        public Criteria andEDeptIdIsNull() {
            addCriterion("e_dept_id is null");
            return (Criteria) this;
        }

        public Criteria andEDeptIdIsNotNull() {
            addCriterion("e_dept_id is not null");
            return (Criteria) this;
        }

        public Criteria andEDeptIdEqualTo(Integer value) {
            addCriterion("e_dept_id =", value, "eDeptId");
            return (Criteria) this;
        }

        public Criteria andEDeptIdNotEqualTo(Integer value) {
            addCriterion("e_dept_id <>", value, "eDeptId");
            return (Criteria) this;
        }

        public Criteria andEDeptIdGreaterThan(Integer value) {
            addCriterion("e_dept_id >", value, "eDeptId");
            return (Criteria) this;
        }

        public Criteria andEDeptIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("e_dept_id >=", value, "eDeptId");
            return (Criteria) this;
        }

        public Criteria andEDeptIdLessThan(Integer value) {
            addCriterion("e_dept_id <", value, "eDeptId");
            return (Criteria) this;
        }

        public Criteria andEDeptIdLessThanOrEqualTo(Integer value) {
            addCriterion("e_dept_id <=", value, "eDeptId");
            return (Criteria) this;
        }

        public Criteria andEDeptIdIn(List<Integer> values) {
            addCriterion("e_dept_id in", values, "eDeptId");
            return (Criteria) this;
        }

        public Criteria andEDeptIdNotIn(List<Integer> values) {
            addCriterion("e_dept_id not in", values, "eDeptId");
            return (Criteria) this;
        }

        public Criteria andEDeptIdBetween(Integer value1, Integer value2) {
            addCriterion("e_dept_id between", value1, value2, "eDeptId");
            return (Criteria) this;
        }

        public Criteria andEDeptIdNotBetween(Integer value1, Integer value2) {
            addCriterion("e_dept_id not between", value1, value2, "eDeptId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table emp
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table emp
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}